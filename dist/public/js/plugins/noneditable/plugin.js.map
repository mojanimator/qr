{"version":3,"sources":["../../../../../public/js/plugins/noneditable/plugin.js"],"names":["global","tinymce","util","Tools","resolve","global$1","getNonEditableClass","editor","getParam","getEditableClass","getNonEditableRegExps","nonEditableRegExps","constructor","RegExp","Settings","hasClass","checkClassName","node","attr","indexOf","replaceMatchWithSpan","content","cls","match","args","arguments","index","length","prevChar","charAt","findStartTagIndex","lastIndexOf","tagHtml","substring","dom","encode","convertRegExpsToNonEditable","e","i","format","replace","setup","editClass","nonEditClass","contentEditableAttrName","trim","hasEditClass","hasNonEditClass","on","parser","addAttributeFilter","nodes","serializer","name","type","raw","value","FilterContent","Plugin","add"],"mappings":"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","file":"plugin.js","sourcesContent":["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.1.0 (2019-10-17)\n */\n(function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var getNonEditableClass = function (editor) {\n      return editor.getParam('noneditable_noneditable_class', 'mceNonEditable');\n    };\n    var getEditableClass = function (editor) {\n      return editor.getParam('noneditable_editable_class', 'mceEditable');\n    };\n    var getNonEditableRegExps = function (editor) {\n      var nonEditableRegExps = editor.getParam('noneditable_regexp', []);\n      if (nonEditableRegExps && nonEditableRegExps.constructor === RegExp) {\n        return [nonEditableRegExps];\n      } else {\n        return nonEditableRegExps;\n      }\n    };\n    var Settings = {\n      getNonEditableClass: getNonEditableClass,\n      getEditableClass: getEditableClass,\n      getNonEditableRegExps: getNonEditableRegExps\n    };\n\n    var hasClass = function (checkClassName) {\n      return function (node) {\n        return (' ' + node.attr('class') + ' ').indexOf(checkClassName) !== -1;\n      };\n    };\n    var replaceMatchWithSpan = function (editor, content, cls) {\n      return function (match) {\n        var args = arguments, index = args[args.length - 2];\n        var prevChar = index > 0 ? content.charAt(index - 1) : '';\n        if (prevChar === '\"') {\n          return match;\n        }\n        if (prevChar === '>') {\n          var findStartTagIndex = content.lastIndexOf('<', index);\n          if (findStartTagIndex !== -1) {\n            var tagHtml = content.substring(findStartTagIndex, index);\n            if (tagHtml.indexOf('contenteditable=\"false\"') !== -1) {\n              return match;\n            }\n          }\n        }\n        return '<span class=\"' + cls + '\" data-mce-content=\"' + editor.dom.encode(args[0]) + '\">' + editor.dom.encode(typeof args[1] === 'string' ? args[1] : args[0]) + '</span>';\n      };\n    };\n    var convertRegExpsToNonEditable = function (editor, nonEditableRegExps, e) {\n      var i = nonEditableRegExps.length, content = e.content;\n      if (e.format === 'raw') {\n        return;\n      }\n      while (i--) {\n        content = content.replace(nonEditableRegExps[i], replaceMatchWithSpan(editor, content, Settings.getNonEditableClass(editor)));\n      }\n      e.content = content;\n    };\n    var setup = function (editor) {\n      var editClass, nonEditClass;\n      var contentEditableAttrName = 'contenteditable';\n      editClass = ' ' + global$1.trim(Settings.getEditableClass(editor)) + ' ';\n      nonEditClass = ' ' + global$1.trim(Settings.getNonEditableClass(editor)) + ' ';\n      var hasEditClass = hasClass(editClass);\n      var hasNonEditClass = hasClass(nonEditClass);\n      var nonEditableRegExps = Settings.getNonEditableRegExps(editor);\n      editor.on('PreInit', function () {\n        if (nonEditableRegExps.length > 0) {\n          editor.on('BeforeSetContent', function (e) {\n            convertRegExpsToNonEditable(editor, nonEditableRegExps, e);\n          });\n        }\n        editor.parser.addAttributeFilter('class', function (nodes) {\n          var i = nodes.length, node;\n          while (i--) {\n            node = nodes[i];\n            if (hasEditClass(node)) {\n              node.attr(contentEditableAttrName, 'true');\n            } else if (hasNonEditClass(node)) {\n              node.attr(contentEditableAttrName, 'false');\n            }\n          }\n        });\n        editor.serializer.addAttributeFilter(contentEditableAttrName, function (nodes) {\n          var i = nodes.length, node;\n          while (i--) {\n            node = nodes[i];\n            if (!hasEditClass(node) && !hasNonEditClass(node)) {\n              continue;\n            }\n            if (nonEditableRegExps.length > 0 && node.attr('data-mce-content')) {\n              node.name = '#text';\n              node.type = 3;\n              node.raw = true;\n              node.value = node.attr('data-mce-content');\n            } else {\n              node.attr(contentEditableAttrName, null);\n            }\n          }\n        });\n      });\n    };\n    var FilterContent = { setup: setup };\n\n    function Plugin () {\n      global.add('noneditable', function (editor) {\n        FilterContent.setup(editor);\n      });\n    }\n\n    Plugin();\n\n}());\n"]}