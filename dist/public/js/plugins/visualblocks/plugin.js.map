{"version":3,"sources":["../../../../../public/js/plugins/visualblocks/plugin.js"],"names":["Cell","initial","value","get","set","v","clone","global","tinymce","util","Tools","resolve","fireVisualBlocks","editor","state","fire","Events","toggleVisualBlocks","pluginUrl","enabledState","dom","toggleClass","getBody","VisualBlocks","register","addCommand","Commands","isEnabledByDefault","getParam","Settings","setup","on","e","type","removeClass","Bindings","toggleActiveState","api","setActive","editorEventCallback","off","register$1","ui","registry","addToggleButton","icon","tooltip","onAction","execCommand","onSetup","addToggleMenuItem","text","Buttons","Plugin","add"],"mappings":"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","file":"plugin.js","sourcesContent":["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.1.0 (2019-10-17)\n */\n(function () {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var fireVisualBlocks = function (editor, state) {\n      editor.fire('VisualBlocks', { state: state });\n    };\n    var Events = { fireVisualBlocks: fireVisualBlocks };\n\n    var toggleVisualBlocks = function (editor, pluginUrl, enabledState) {\n      var dom = editor.dom;\n      dom.toggleClass(editor.getBody(), 'mce-visualblocks');\n      enabledState.set(!enabledState.get());\n      Events.fireVisualBlocks(editor, enabledState.get());\n    };\n    var VisualBlocks = { toggleVisualBlocks: toggleVisualBlocks };\n\n    var register = function (editor, pluginUrl, enabledState) {\n      editor.addCommand('mceVisualBlocks', function () {\n        VisualBlocks.toggleVisualBlocks(editor, pluginUrl, enabledState);\n      });\n    };\n    var Commands = { register: register };\n\n    var isEnabledByDefault = function (editor) {\n      return editor.getParam('visualblocks_default_state', false, 'boolean');\n    };\n    var Settings = { isEnabledByDefault: isEnabledByDefault };\n\n    var setup = function (editor, pluginUrl, enabledState) {\n      editor.on('PreviewFormats AfterPreviewFormats', function (e) {\n        if (enabledState.get()) {\n          editor.dom.toggleClass(editor.getBody(), 'mce-visualblocks', e.type === 'afterpreviewformats');\n        }\n      });\n      editor.on('init', function () {\n        if (Settings.isEnabledByDefault(editor)) {\n          VisualBlocks.toggleVisualBlocks(editor, pluginUrl, enabledState);\n        }\n      });\n      editor.on('remove', function () {\n        editor.dom.removeClass(editor.getBody(), 'mce-visualblocks');\n      });\n    };\n    var Bindings = { setup: setup };\n\n    var toggleActiveState = function (editor, enabledState) {\n      return function (api) {\n        api.setActive(enabledState.get());\n        var editorEventCallback = function (e) {\n          return api.setActive(e.state);\n        };\n        editor.on('VisualBlocks', editorEventCallback);\n        return function () {\n          return editor.off('VisualBlocks', editorEventCallback);\n        };\n      };\n    };\n    var register$1 = function (editor, enabledState) {\n      editor.ui.registry.addToggleButton('visualblocks', {\n        icon: 'visualblocks',\n        tooltip: 'Show blocks',\n        onAction: function () {\n          return editor.execCommand('mceVisualBlocks');\n        },\n        onSetup: toggleActiveState(editor, enabledState)\n      });\n      editor.ui.registry.addToggleMenuItem('visualblocks', {\n        text: 'Show blocks',\n        onAction: function () {\n          return editor.execCommand('mceVisualBlocks');\n        },\n        onSetup: toggleActiveState(editor, enabledState)\n      });\n    };\n    var Buttons = { register: register$1 };\n\n    function Plugin () {\n      global.add('visualblocks', function (editor, pluginUrl) {\n        var enabledState = Cell(false);\n        Commands.register(editor, pluginUrl, enabledState);\n        Buttons.register(editor, enabledState);\n        Bindings.setup(editor, pluginUrl, enabledState);\n      });\n    }\n\n    Plugin();\n\n}());\n"]}