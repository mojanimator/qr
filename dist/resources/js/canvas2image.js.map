{"version":3,"sources":["../../../resources/js/canvas2image.js"],"names":["Canvas2Image","$support","canvas","document","createElement","ctx","getContext","imageData","getImageData","dataURL","toDataURL","btoa","window","downloadMime","scaleCanvas","width","height","w","h","undefined","retCanvas","retCtx","drawImage","getDataURL","type","saveFile","strData","location","href","genImage","img","src","fixType","toLowerCase","replace","r","match","encodeData","data","str","i","length","String","fromCharCode","makeURI","genBitmapImage","oData","biWidth","biHeight","biSizeImage","bfSize","BITMAPFILEHEADER","BITMAPINFOHEADER","iPadding","aImgData","strPixelData","biWidth4","y","iOffsetY","strPixelRow","x","iOffsetX","c","strEncoded","concat","saveAsImage","getElementById","test","convertToImage","saveAsPNG","saveAsJPEG","saveAsGIF","saveAsBMP","convertToPNG","convertToJPEG","convertToGIF","convertToBMP"],"mappings":"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","file":"canvas2image.js","sourcesContent":["/**\r\n * covert canvas to image\r\n * and save the image file\r\n */\r\n\r\nvar Canvas2Image = function () {\r\n\r\n    // check if support sth.\r\n    var $support = function () {\r\n        var canvas = document.createElement('canvas'),\r\n            ctx = canvas.getContext('2d');\r\n\r\n        return {\r\n            canvas: !!ctx,\r\n            imageData: !!ctx.getImageData,\r\n            dataURL: !!canvas.toDataURL,\r\n            btoa: !!window.btoa\r\n        };\r\n    }();\r\n\r\n    var downloadMime = 'image/octet-stream';\r\n\r\n    function scaleCanvas(canvas, width, height) {\r\n        var w = canvas.width,\r\n            h = canvas.height;\r\n        if (width == undefined) {\r\n            width = w;\r\n        }\r\n        if (height == undefined) {\r\n            height = h;\r\n        }\r\n\r\n        var retCanvas = document.createElement('canvas');\r\n        var retCtx = retCanvas.getContext('2d');\r\n        retCanvas.width = width;\r\n        retCanvas.height = height;\r\n        retCtx.drawImage(canvas, 0, 0, w, h, 0, 0, width, height);\r\n        return retCanvas;\r\n    }\r\n\r\n    function getDataURL(canvas, type, width, height) {\r\n        canvas = scaleCanvas(canvas, width, height);\r\n        return canvas.toDataURL(type);\r\n    }\r\n\r\n    function saveFile(strData) {\r\n        document.location.href = strData;\r\n    }\r\n\r\n    function genImage(strData) {\r\n        var img = document.createElement('img');\r\n        img.src = strData;\r\n        return img;\r\n    }\r\n\r\n    function fixType(type) {\r\n        type = type.toLowerCase().replace(/jpg/i, 'jpeg');\r\n        var r = type.match(/png|jpeg|bmp|gif/)[0];\r\n        return 'image/' + r;\r\n    }\r\n\r\n    function encodeData(data) {\r\n        if (!window.btoa) {\r\n            throw 'btoa undefined'\r\n        }\r\n        var str = '';\r\n        if (typeof data == 'string') {\r\n            str = data;\r\n        } else {\r\n            for (var i = 0; i < data.length; i++) {\r\n                str += String.fromCharCode(data[i]);\r\n            }\r\n        }\r\n\r\n        return btoa(str);\r\n    }\r\n\r\n    function getImageData(canvas) {\r\n        var w = canvas.width,\r\n            h = canvas.height;\r\n        return canvas.getContext('2d').getImageData(0, 0, w, h);\r\n    }\r\n\r\n    function makeURI(strData, type) {\r\n        return 'data:' + type + ';base64,' + strData;\r\n    }\r\n\r\n\r\n    /**\r\n     * create bitmap image\r\n     * 按照规则生成图片响应头和响应体\r\n     */\r\n    var genBitmapImage = function (oData) {\r\n\r\n        //\r\n        // BITMAPFILEHEADER: http://msdn.microsoft.com/en-us/library/windows/desktop/dd183374(v=vs.85).aspx\r\n        // BITMAPINFOHEADER: http://msdn.microsoft.com/en-us/library/dd183376.aspx\r\n        //\r\n\r\n        var biWidth = oData.width;\r\n        var biHeight = oData.height;\r\n        var biSizeImage = biWidth * biHeight * 3;\r\n        var bfSize = biSizeImage + 54; // total header size = 54 bytes\r\n\r\n        //\r\n        //  typedef struct tagBITMAPFILEHEADER {\r\n        //  \tWORD bfType;\r\n        //  \tDWORD bfSize;\r\n        //  \tWORD bfReserved1;\r\n        //  \tWORD bfReserved2;\r\n        //  \tDWORD bfOffBits;\r\n        //  } BITMAPFILEHEADER;\r\n        //\r\n        var BITMAPFILEHEADER = [\r\n            // WORD bfType -- The file type signature; must be \"BM\"\r\n            0x42, 0x4D,\r\n            // DWORD bfSize -- The size, in bytes, of the bitmap file\r\n            bfSize & 0xff, bfSize >> 8 & 0xff, bfSize >> 16 & 0xff, bfSize >> 24 & 0xff,\r\n            // WORD bfReserved1 -- Reserved; must be zero\r\n            0, 0,\r\n            // WORD bfReserved2 -- Reserved; must be zero\r\n            0, 0,\r\n            // DWORD bfOffBits -- The offset, in bytes, from the beginning of the BITMAPFILEHEADER structure to the bitmap bits.\r\n            54, 0, 0, 0\r\n        ];\r\n\r\n        //\r\n        //  typedef struct tagBITMAPINFOHEADER {\r\n        //  \tDWORD biSize;\r\n        //  \tLONG  biWidth;\r\n        //  \tLONG  biHeight;\r\n        //  \tWORD  biPlanes;\r\n        //  \tWORD  biBitCount;\r\n        //  \tDWORD biCompression;\r\n        //  \tDWORD biSizeImage;\r\n        //  \tLONG  biXPelsPerMeter;\r\n        //  \tLONG  biYPelsPerMeter;\r\n        //  \tDWORD biClrUsed;\r\n        //  \tDWORD biClrImportant;\r\n        //  } BITMAPINFOHEADER, *PBITMAPINFOHEADER;\r\n        //\r\n        var BITMAPINFOHEADER = [\r\n            // DWORD biSize -- The number of bytes required by the structure\r\n            40, 0, 0, 0,\r\n            // LONG biWidth -- The width of the bitmap, in pixels\r\n            biWidth & 0xff, biWidth >> 8 & 0xff, biWidth >> 16 & 0xff, biWidth >> 24 & 0xff,\r\n            // LONG biHeight -- The height of the bitmap, in pixels\r\n            biHeight & 0xff, biHeight >> 8 & 0xff, biHeight >> 16 & 0xff, biHeight >> 24 & 0xff,\r\n            // WORD biPlanes -- The number of planes for the target device. This value must be set to 1\r\n            1, 0,\r\n            // WORD biBitCount -- The number of bits-per-pixel, 24 bits-per-pixel -- the bitmap\r\n            // has a maximum of 2^24 colors (16777216, Truecolor)\r\n            24, 0,\r\n            // DWORD biCompression -- The type of compression, BI_RGB (code 0) -- uncompressed\r\n            0, 0, 0, 0,\r\n            // DWORD biSizeImage -- The size, in bytes, of the image. This may be set to zero for BI_RGB bitmaps\r\n            biSizeImage & 0xff, biSizeImage >> 8 & 0xff, biSizeImage >> 16 & 0xff, biSizeImage >> 24 & 0xff,\r\n            // LONG biXPelsPerMeter, unused\r\n            0, 0, 0, 0,\r\n            // LONG biYPelsPerMeter, unused\r\n            0, 0, 0, 0,\r\n            // DWORD biClrUsed, the number of color indexes of palette, unused\r\n            0, 0, 0, 0,\r\n            // DWORD biClrImportant, unused\r\n            0, 0, 0, 0\r\n        ];\r\n\r\n        var iPadding = (4 - ((biWidth * 3) % 4)) % 4;\r\n\r\n        var aImgData = oData.data;\r\n\r\n        var strPixelData = '';\r\n        var biWidth4 = biWidth << 2;\r\n        var y = biHeight;\r\n        var fromCharCode = String.fromCharCode;\r\n\r\n        do {\r\n            var iOffsetY = biWidth4 * (y - 1);\r\n            var strPixelRow = '';\r\n            for (var x = 0; x < biWidth; x++) {\r\n                var iOffsetX = x << 2;\r\n                strPixelRow += fromCharCode(aImgData[iOffsetY + iOffsetX + 2]) +\r\n                    fromCharCode(aImgData[iOffsetY + iOffsetX + 1]) +\r\n                    fromCharCode(aImgData[iOffsetY + iOffsetX]);\r\n            }\r\n\r\n            for (var c = 0; c < iPadding; c++) {\r\n                strPixelRow += String.fromCharCode(0);\r\n            }\r\n\r\n            strPixelData += strPixelRow;\r\n        } while (--y);\r\n\r\n        var strEncoded = encodeData(BITMAPFILEHEADER.concat(BITMAPINFOHEADER)) + encodeData(strPixelData);\r\n\r\n        return strEncoded;\r\n    };\r\n\r\n    /**\r\n     * saveAsImage\r\n     * @param canvasElement\r\n     * @param {String} image type\r\n     * @param {Number} [optional] png width\r\n     * @param {Number} [optional] png height\r\n     */\r\n    var saveAsImage = function (canvas, width, height, type) {\r\n        if ($support.canvas && $support.dataURL) {\r\n            if (typeof canvas == \"string\") {\r\n                canvas = document.getElementById(canvas);\r\n            }\r\n            if (type == undefined) {\r\n                type = 'png';\r\n            }\r\n            type = fixType(type);\r\n            if (/bmp/.test(type)) {\r\n                var data = getImageData(scaleCanvas(canvas, width, height));\r\n                var strData = genBitmapImage(data);\r\n                saveFile(makeURI(strData, downloadMime));\r\n            } else {\r\n                var strData = getDataURL(canvas, type, width, height);\r\n                saveFile(strData.replace(type, downloadMime));\r\n            }\r\n        }\r\n    };\r\n\r\n    var convertToImage = function (canvas, width, height, type) {\r\n        if ($support.canvas && $support.dataURL) {\r\n            if (typeof canvas == \"string\") {\r\n                canvas = document.getElementById(canvas);\r\n            }\r\n            if (type == undefined) {\r\n                type = 'png';\r\n            }\r\n            type = fixType(type);\r\n\r\n            if (/bmp/.test(type)) {\r\n                var data = getImageData(scaleCanvas(canvas, width, height));\r\n                var strData = genBitmapImage(data);\r\n                return genImage(makeURI(strData, 'image/bmp'));\r\n            } else {\r\n                var strData = getDataURL(canvas, type, width, height);\r\n                return genImage(strData);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    return {\r\n        saveAsImage: saveAsImage,\r\n        saveAsPNG: function (canvas, width, height) {\r\n            return saveAsImage(canvas, width, height, 'png');\r\n        },\r\n        saveAsJPEG: function (canvas, width, height) {\r\n            return saveAsImage(canvas, width, height, 'jpeg');\r\n        },\r\n        saveAsGIF: function (canvas, width, height) {\r\n            return saveAsImage(canvas, width, height, 'gif');\r\n        },\r\n        saveAsBMP: function (canvas, width, height) {\r\n            return saveAsImage(canvas, width, height, 'bmp');\r\n        },\r\n\r\n        convertToImage: convertToImage,\r\n        convertToPNG: function (canvas, width, height) {\r\n            return convertToImage(canvas, width, height, 'png');\r\n        },\r\n        convertToJPEG: function (canvas, width, height) {\r\n            return convertToImage(canvas, width, height, 'jpeg');\r\n        },\r\n        convertToGIF: function (canvas, width, height) {\r\n            return convertToImage(canvas, width, height, 'gif');\r\n        },\r\n        convertToBMP: function (canvas, width, height) {\r\n            return convertToImage(canvas, width, height, 'bmp');\r\n        }\r\n    };\r\n\r\n}();"]}